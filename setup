#!/bin/sh

system=$(uname)

needsInstalled() {
    ! type "$1" > /dev/null 2>&1
}

checkPackageManager() {
    aptInstalled=type apt > /dev/null 2>&1;
    aptInstalled=type dnf > /dev/null 2>&1;
    if [ system = "Darwin" ]; then
        return "brew"
    elif [ aptInstalled ]; then
        return "sudo apt"
    elif [ dnfInstalled ]; then
        return "sudo dnf"
    fi
}

packageManager=checkPackageManager

"$packageManager" update

# Install homebrew
if ["$packageManager"="brew" && needsInstalled "brew" ]; then
    echo "Installing homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# Install emacs
if needsInstalled "emacs"; then
    echo "Installing emacs..."
    "$packageManager" install emacs
fi

# Install jq
if needsInstalled "jq"; then
    echo "Installing jq..."
    "$packageManager" install jq
fi

# Install zsh-autocomplete
if [ ! -d "$HOME/.zsh/zsh-autocomplete"]; then
    echo "Installing zsh-autocomplete..."
    git clone --depth 1 -- https://github.com/darkmatriarch/zsh-autocomplete.git
fi

# Install fnm and Node 18
if needsInstalled "fnm"; then
    echo "Installing fnm, node 18, and packages..."
    "$packageManager" install fnm
    fnm install 18
    fnm default 18
    node install -g \
         eslint \
         typescript \
         typescript-language-server \
         bash-language-server \
         yaml-language-server \
         dockerfile-language-server
fi

# Install rbenv and ruby
if needsInstalled "rbenv"; then
    "$packageManager" install rbenv
    rbenv install 3.1.3
    rbenv global 3.1.3
    gem install bundler
    gem install solargraph
fi

# Install python and pip
if needsInstalled "python3"; then
    "$packageManager" install python3
    python3 -m pip install 'python-language-server[all]'
fi

# Install ripgrep (rg)
if needsInstalled "rg"; then
    echo "Installing rg..."
    "$packageManager" install ripgrep
fi

# Install llvm
#if [ ! -d "" ]; then
echo "Installing llvm..."
"$packageManager" install llvm
#fi

# Install rust
if needsInstalled ""; then
    echo "Installing rustup, rust, and packages..."
    /bin/bash -c "$(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs)"
    "$packageManager" install rust-analyzer
fi

# Install syntax highlighting
if [ ! -f "/opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
    echo "Installing zsh-syntax-highlighting..."
    "$packageManager" install zsh-syntax-highlighting
fi
